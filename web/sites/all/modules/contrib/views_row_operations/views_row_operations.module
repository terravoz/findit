<?php
/**
 * @file
 *  View Row Operations module
 */

/**
 * Implements hook_views_api().
 */
function views_row_operations_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'views_row_operations'),
  );
}

/**
 * Implements hook_views_bulk_operations_form_alter().
 */
function views_row_operations_views_bulk_operations_form_alter(&$form, &$form_state, $vbo) {
  $form['#submit'][] = 'views_row_operations_form_submit';
  if ($vbo instanceof views_row_operations_handler_field_operations) {
    unset($form['select']);
    $form['operation'] = array(
      '#type' => 'value',
      '#value' => '',
    );
  }
}

/**
 * Additional submit handler for views_bulk_operations_form.
 */
function views_row_operations_form_submit($form, &$form_state) {
  if (empty($form_state['triggering_element']['#vro_operation'])) {
    return;
  }

  $vro = _views_row_operations_get_field($form_state['build_info']['args'][0]);
  $entity_type = $vro->get_entity_type();

  $entity_id = $form_state['triggering_element']['#entity_id'];
  $operation_id = $form_state['triggering_element']['#operation_id'];

  if ($form_state['step'] == 'views_form_views_form') {
    $form_state['selection'] = array($entity_id);
    $form_state['select_all_pages'] = FALSE;

    $options = $vro->get_operation_options($operation_id);
    $form_state['operation'] = $operation = views_row_operations_get_operation($operation_id, $entity_type, $options);

    if ($operation->configurable() || !$operation->getAdminOption('skip_confirmation')) {
      $form_state['step'] = $operation->configurable() ? 'views_bulk_operations_config_form' : 'views_bulk_operations_confirm_form';
      $form_state['rebuild'] = TRUE;
      return;
    }
  }

  // Execute the operation.
  views_bulk_operations_execute($vro, $form_state['operation'], $form_state['selection']);

  // Redirect.
  $query = drupal_get_query_parameters($_GET, array('q'));
  $form_state['redirect'] = array('path' => $vro->view->get_url(), array('query' => $query));
}

/**
 * Returns an operation instance.
 *
 * @param $operation_id
 *   The id of the operation to instantiate.
 *   For example: action::node_publish_action.
 * @param $entity_type
 *   The entity type on which the operation operates.
 * @param $options
 *   Options for this operation (label, operation settings, etc.)
 */
function views_row_operations_get_operation($operation_id, $entity_type, $options) {
  $operations = &drupal_static(__FUNCTION__);

  if (!isset($operations[$operation_id])) {
    // Intentionally not using views_bulk_operations_get_operation_info() here
    // since it's an expensive function that loads all the operations on the
    // system, despite the fact that we might only need a few.
    $id_fragments = explode('::', $operation_id);
    $plugin = views_bulk_operations_get_operation_type($id_fragments[0]);
    $operation_info = $plugin['list callback']($operation_id);

    if ($operation_info) {
      $operations[$operation_id] = new $plugin['handler']['class']($operation_id, $entity_type, $operation_info, $options);
    }
    else {
      $operations[$operation_id] = FALSE;
    }
  }

  return $operations[$operation_id];
}

/**
 * Gets the VRO field if it exists on the passed-in view.
 *
 * @return
 *  The field object if found. Otherwise, FALSE.
 */
function _views_row_operations_get_field($view) {
  foreach ($view->field as $field_name => $field) {
    if ($field instanceof views_row_operations_handler_field_operations) {
      // Add in the view object for convenience.
      $field->view = $view;
      return $field;
    }
  }
  return FALSE;
}
